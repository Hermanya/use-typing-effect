{"version":3,"sources":["../../dist/index.es.js","App.js","index.js"],"names":["index_es_useTypingEffect","strings","timeoutId","_a","Object","react","stringIndex","characterIndex","_b","setState","emulateKeyStroke","length","window","setTimeout","clearInterval","slice","example","trim","Command","_ref","children","className","react_default","a","createElement","concat","readOnly","defaultValue","App","heading","useTypingEffect","comment","App_Command","href","style","transform","value","join","rows","split","height","width","alt","src","ReactDOM","render","src_App","document","getElementById"],"mappings":"oIAEIA,QAAe,SAAAC,GACnB,IASAC,EATAC,EAAWC,OAAAC,EAAA,SAAAD,CAAQ,CACnBE,YAAA,EACAC,eAAA,IAEAC,EAAAL,EAAA,GACAG,EAAAE,EAAAF,YACAC,EAAAC,EAAAD,eACAE,EAAAN,EAAA,GA4BEC,OAAAC,EAAA,UAAAD,CAAS,WAEX,OA1BA,SAAAM,MACAH,IAEAN,EAAAK,GAAAK,QACAJ,EAAA,IACAD,IAEAL,EAAAU,SACAL,EAAA,GAGAJ,EAAAU,OAAAC,WAAAH,EAAA,MAEAR,EADKK,IAAAN,EAAAK,GAAAK,OAAA,EACLC,OAAAC,WAAAH,EAAA,KAEAE,OAAAC,WAAAH,EAAA,KAGAD,EAAA,CACAF,iBACAD,gBAKAI,GACA,WACAE,OAAAE,cAAAZ,KAEG,IAEH,OAAAD,EAAAK,GAAAS,MAAA,EAAAR,EAAA,IADA,SCzCMS,EAAU,wPAcdC,OAEIC,EAAU,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,UAAZ,OAA2BC,EAAAC,EAAAC,cAAA,SAAOH,UAAS,yEAAAI,OAA2EJ,GAAa,IAAMK,UAAQ,EAACC,aAAcP,KAqDjKQ,EAnDH,WACV,IAAMC,EAAUC,EAAgB,CAC9B,kCACA,gBACA,mBACA,kBACA,uBAEIC,EAAUD,EAAgB,CAC9B,eACA,gBACA,mBAGF,OACER,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKH,UAAU,qFACbC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,gCACbC,EAAAC,EAAAC,cAAA,MAAIH,UAAU,qCAAqCQ,GACnDP,EAAAC,EAAAC,cAAA,KAAGH,UAAU,mBACbC,EAAAC,EAAAC,cAACQ,EAAD,sCACAV,EAAAC,EAAAC,cAACQ,EAAD,CAASX,UAAU,cAAnB,8BACAC,EAAAC,EAAAC,cAAA,KAAGH,UAAU,yBAAyBY,KAAK,mDAA3C,OACAX,EAAAC,EAAAC,cAAA,KAAGH,UAAU,oBAAoBY,KAAK,iDAAtC,YAGJX,EAAAC,EAAAC,cAAA,OAAKH,UAAU,iCACfC,EAAAC,EAAAC,cAAA,YACEH,UAAU,oIACVa,MAAO,CAACC,UAAW,oBACnBC,MAAO,CAACpB,EAASe,GAASM,KAAK,MAC/BX,UAAQ,EACRY,KAAMtB,EAAQuB,MAAM,MAAM5B,OAAS,KAGrCW,EAAAC,EAAAC,cAAA,OAAKH,UAAU,yDAAf,WAEEC,EAAAC,EAAAC,cAAA,KAAGS,KAAK,6BAA6BZ,UAAU,QAA/C,mBAGEC,EAAAC,EAAAC,cAAA,OACEgB,OAAO,KACPC,MAAM,KACNpB,UAAU,8BACVqB,IAAI,SACJC,IAAI,oFC5DhBC,IAASC,OAAOvB,EAAAC,EAAAC,cAACsB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.31945bc9.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nvar useTypingEffect = function useTypingEffect(strings) {\n  var _a = useState({\n    stringIndex: 0,\n    characterIndex: 0\n  }),\n      _b = _a[0],\n      stringIndex = _b.stringIndex,\n      characterIndex = _b.characterIndex,\n      setState = _a[1];\n\n  var timeoutId;\n\n  var emulateKeyStroke = function emulateKeyStroke() {\n    characterIndex++;\n\n    if (characterIndex === strings[stringIndex].length) {\n      characterIndex = 0;\n      stringIndex++;\n\n      if (stringIndex === strings.length) {\n        stringIndex = 0;\n      }\n\n      timeoutId = window.setTimeout(emulateKeyStroke, 100);\n    } else if (characterIndex === strings[stringIndex].length - 1) {\n      timeoutId = window.setTimeout(emulateKeyStroke, 2000);\n    } else {\n      timeoutId = window.setTimeout(emulateKeyStroke, 100);\n    }\n\n    setState({\n      characterIndex: characterIndex,\n      stringIndex: stringIndex\n    });\n  };\n\n  useEffect(function () {\n    emulateKeyStroke();\n    return function () {\n      window.clearInterval(timeoutId);\n    };\n  }, []);\n  var nonBreakingSpace = \"\\xA0\";\n  return strings[stringIndex].slice(0, characterIndex + 1) || nonBreakingSpace;\n};\n\nexport default useTypingEffect;\nexport { useTypingEffect };","import React from 'react'\nimport { useTypingEffect } from 'use-typing-effect'\n\nconst example = `\nimport * as React from 'react'\n\nimport useTypingEffect from 'use-typing-effect'\n\nconst Example = () => {\n  const heading = useTypingEffect([\n    'Some text here',\n    'More text here',\n  ])\n  return (\n    <h1>{heading}</h1>\n  )\n}\n`.trim()\n\nconst Command = ({children, className}) => <input className={`form-control text-monospace  border-0 bg-transparent text-center mb-3 ${className || ''}`} readOnly defaultValue={children}/>\n\nconst App = () => {\n  const heading = useTypingEffect([\n    '“Human typing” effect',\n    'React hook...',\n    'Best react hook!',\n    'Star on github!',\n    'Use in production!',\n  ])\n  const comment = useTypingEffect([\n    '// Nice, eh?',\n    '// Simple API',\n    '// Easy to use'\n  ])\n\n  return (\n    <div>\n      <div className=\"position-relative overflow-hidden p-3 p-md-5 mt-md-3 mx-md-3 text-center bg-light\">\n        <div className=\"col-md-8 p-lg-8 mx-auto my-5\">\n          <h1 className=\"display-4 font-weight-normal my-5\">{heading}</h1>\n          <p className=\"text-monospace\"></p>\n          <Command>npm install use-typing-effect</Command>\n          <Command className=\"text-muted\">yarn add use-typing-effect</Command>\n          <a className=\"btn btn-outline-danger\" href=\"https://www.npmjs.com/package/use-typing-effect\">npm</a>\n          <a className=\"btn btn-dark ml-2\" href=\"https://github.com/Hermanya/use-typing-effect\">github</a>\n        </div>\n      </div>\n      <div className=\"mx-3 d-flex flex-align-center\">\n      <textarea\n        className=\"col-sm-8 col-md-6 col-lg-4 p-3 px-lg-5 mx-auto text-left bg-dark text-success rounded shadow text-monospace form-control border-0\"\n        style={{transform: 'translateY(-3em)'}}\n        value={[example, comment].join('\\n')}\n        readOnly\n        rows={example.split('\\n').length + 2}\n        />\n      </div>\n      <div className=\"d-flex justify-content-center align-items-center my-2\">\n        MIT ©\n        <a href=\"https://hermanya.github.io\" className=\"ml-1\">\n          Herman Starikov\n        </a>\n          <img\n            height=\"48\"\n            width=\"48\"\n            className=\"rounded d-inline-block ml-2\"\n            alt=\"Herman\"\n            src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/1589206/profile/profile-512.jpg\"/>\n      </div>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}